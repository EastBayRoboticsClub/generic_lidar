<?xml version="1.0"?>
<robot name="generic_lidar" xmlns:xacro="http://www.ros.org/wiki/xacro">
    <!-- All distance/length variables are in meters -->
    <!-- Lidar base variables -->
    <xacro:property name="baseRadius" value="0.04267"/>
    <xacro:property name="baseLength" value="0.05867"/>
    <xacro:property name="baseMass" value="1.2"/>
    <!-- Lidar top variables -->
    <xacro:property name="topRadius" value="0.04267"/>
    <xacro:property name="topLength" value="0.07357"/>
    <xacro:property name="topMass" value="0.1"/>
    <!-- Sensor variables -->
    <xacro:property name="numBeams" value="32"/>
    <xacro:property name="minBeamDistance" value="0.05"/>
    <xacro:property name="maxBeamDistance" value="70"/>
    <!-- Give the base link a unique name -->
    <link name="base">
        <inertial>
            <mass value="${baseMass}"/>
            <!-- TODO: calculate inertia based on mass -->
            <inertia ixx="0.001087473" iyy="0.001087473" izz="0.001092437" ixy="0" ixz="0" iyz="0"/>
        </inertial>
        <!-- Geometries taken from base variables -->
        <collision>
            <!-- Offset the base by half the length of the cylinder -->
            <!-- <origin xyz="0 0 ${baseLength/2}" rpy="0 0 0"/> -->
            <geometry>
                <cylinder radius="${baseRadius}" length="${baseLength}"/>
            </geometry>
        </collision>
        <!--Visuals and collision geometries will match-->
        <visual>
            <!-- Offset the base by half the length of the cylinder -->
            <!-- <origin xyz="0 0 ${baseLength/2}" rpy="0 0 0"/> -->
            <geometry>
                <cylinder radius="${baseRadius}" length="${baseLength}"/>
            </geometry>
        </visual>
    </link>
    <!-- Give the base link a unique name -->
    <link name="top">
        <inertial>
            <mass value="${topMass}"/>
            <!-- TODO: calculate inertia based on mass -->
            <inertia ixx="0.000090623" iyy ="0.000090623" izz="0.000091036" ixy="0" ixz="0" iyz="0"/>
        </inertial>
        <!-- Geometries taken from top variables -->
        <collision>
            <!-- Vertically offset the top cylinder by the height of the bottom
        cylinder and half the height of this cylinder. -->
            <origin xyz="0 0 ${topLength/2}" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="${baseRadius}" length="${topLength}"/>
            </geometry>
        </collision>
        <!--Visuals and collision geometries will match-->
        <visual>
            <!-- Vertically offset the top cylinder by the height of the bottom
        cylinder and half the height of this cylinder. -->
            <origin xyz="0 0 ${topLength/2}" rpy="0 0 0"/>
            <geometry>
                <cylinder radius="${baseRadius}" length="${topLength}"/>
            </geometry>
        </visual>
    </link>
    <!-- Each joint must have a unique name -->
    <joint type="revolute" name="joint">
        <!-- Position the joint at the bottom of the top link -->
        <origin xyz="0 0 ${baseLength/2}" rpy="0 0 0"/>
        <parent link="base"/>
        <child link="top"/>
        <!-- The axis defines the joint's degree of freedom -->
        <axis xyz="0 0 1"/>
        <!-- Limit refers to the range of motion of the joint, these values need to be looked at -->
        <limit effort="30" velocity="100.0" lower="-10000000000000000" upper="10000000000000000"/>
    </joint>

    <!-- Gazebo specific elements -->
    <!-- Lidar gazebo plugin -->
    <gazebo>
        <plugin name="lidar_control" filename="liblidar_plugin.so">
            <velocity>2</velocity>
        </plugin>
    </gazebo>
    <!-- ray sensor for lidar -->
    <gazebo reference="top">
        <sensor type="ray" name="sensor">
            <!-- Position the ray sensor based on the specification. Also rotate
       it by 90 degrees around the X-axis so that the <horizontal> rays
       become vertical -->
            <pose>0 0 ${topLength/2} 0 0 0</pose>
            <!-- Enable visualization to see the rays in the GUI -->
            <visualize>true</visualize>
            <!-- Set the update rate of the sensor -->
            <update_rate>30</update_rate>
            <ray>
                <!-- The scan element contains the horizontal and vertical beams.
       We are leaving out the vertical beams for this tutorial. -->
                <scan>
                    <!-- The vertical beams -->
                    <vertical>
                        <samples>${numBeams}</samples>
                        <!-- Resolution is multiplied by samples to determine number of
           simulated beams vs interpolated beams. See: http://sdformat.org/spec?ver=1.6&elem=sensor#horizontal_resolution
           -->
                        <resolution>1</resolution>
                        <!-- Minimum angle in radians -->
                        <min_angle>-0.53529248</min_angle>
                        <!-- Maximum angle in radians -->
                        <max_angle>0.18622663</max_angle>
                    </vertical>
                </scan>
                <!-- Range defines characteristics of an individual beam -->
                <range>
                    <!-- Minimum distance of the beam -->
                    <min>${minBeamDistance}</min>
                    <!-- Maximum distance of the beam -->
                    <max>${maxBeamDistance}</max>
                    <!-- Linear resolution of the beam -->
                    <resolution>0.02</resolution>
                </range>
            </ray>
        </sensor>
    </gazebo>
</robot>